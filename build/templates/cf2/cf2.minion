MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 0
# CSE_active_eliminated_expressions = 0
# CSE_active_total_size = 0
**VARIABLES**
DISCRETE design_FunctionND_00001_00001 #
{0..9}
DISCRETE design_FunctionND_00001_00002 #
{0..9}
DISCRETE design_FunctionND_00001_00003 #
{0..9}
DISCRETE design_FunctionND_00001_00004 #
{0..9}
DISCRETE design_FunctionND_00001_00005 #
{0..9}
DISCRETE design_FunctionND_00001_00006 #
{0..9}
DISCRETE design_FunctionND_00001_00007 #
{0..9}
DISCRETE design_FunctionND_00002_00001 #
{0..9}
DISCRETE design_FunctionND_00002_00002 #
{0..9}
DISCRETE design_FunctionND_00002_00003 #
{0..9}
DISCRETE design_FunctionND_00002_00004 #
{0..9}
DISCRETE design_FunctionND_00002_00005 #
{0..9}
DISCRETE design_FunctionND_00002_00006 #
{0..9}
DISCRETE design_FunctionND_00002_00007 #
{0..9}
DISCRETE printings_Function1D_00001 #
{0..1100}
DISCRETE printings_Function1D_00002 #
{0..1100}
DISCRETE aux1 #(printings_Function1D_00001 + printings_Function1D_00002)
{123..2200}
DISCRETE aux2 #(design_FunctionND_00001_00001 * printings_Function1D_00001)
{0..9900}
DISCRETE aux3 #(design_FunctionND_00002_00001 * printings_Function1D_00002)
{0..9900}
DISCRETE aux4 #(design_FunctionND_00001_00002 * printings_Function1D_00001)
{0..9900}
DISCRETE aux5 #(design_FunctionND_00002_00002 * printings_Function1D_00002)
{0..9900}
DISCRETE aux6 #(design_FunctionND_00001_00003 * printings_Function1D_00001)
{0..9900}
DISCRETE aux7 #(design_FunctionND_00002_00003 * printings_Function1D_00002)
{0..9900}
DISCRETE aux8 #(design_FunctionND_00001_00004 * printings_Function1D_00001)
{0..9900}
DISCRETE aux9 #(design_FunctionND_00002_00004 * printings_Function1D_00002)
{0..9900}
DISCRETE aux10 #(design_FunctionND_00001_00005 * printings_Function1D_00001)
{0..9900}
DISCRETE aux11 #(design_FunctionND_00002_00005 * printings_Function1D_00002)
{0..9900}
DISCRETE aux12 #(design_FunctionND_00001_00006 * printings_Function1D_00001)
{0..9900}
DISCRETE aux13 #(design_FunctionND_00002_00006 * printings_Function1D_00002)
{0..9900}
DISCRETE aux14 #(design_FunctionND_00001_00007 * printings_Function1D_00001)
{0..9900}
DISCRETE aux15 #(design_FunctionND_00002_00007 * printings_Function1D_00002)
{0..9900}
**VARIABLES**
ALIAS demand_Function1D[7]=[250, 255, 260, 500, 500, 800, 1100]
**SEARCH**
PRINT[[design_FunctionND_00001_00001],[design_FunctionND_00001_00002],[design_FunctionND_00001_00003],[design_FunctionND_00001_00004],[design_FunctionND_00001_00005],[design_FunctionND_00001_00006],[design_FunctionND_00001_00007],[design_FunctionND_00002_00001],[design_FunctionND_00002_00002],[design_FunctionND_00002_00003],[design_FunctionND_00002_00004],[design_FunctionND_00002_00005],[design_FunctionND_00002_00006],[design_FunctionND_00002_00007],[printings_Function1D_00001],[printings_Function1D_00002][aux1]]
MINIMISING aux1
VARORDER STATIC [design_FunctionND_00001_00001, design_FunctionND_00001_00002, design_FunctionND_00001_00003, design_FunctionND_00001_00004, design_FunctionND_00001_00005, design_FunctionND_00001_00006, design_FunctionND_00001_00007, design_FunctionND_00002_00001, design_FunctionND_00002_00002, design_FunctionND_00002_00003, design_FunctionND_00002_00004, design_FunctionND_00002_00005, design_FunctionND_00002_00006, design_FunctionND_00002_00007, printings_Function1D_00001, printings_Function1D_00002]
**CONSTRAINTS**
product(design_FunctionND_00001_00001, printings_Function1D_00001, aux2)
product(design_FunctionND_00002_00001, printings_Function1D_00002, aux3)
product(design_FunctionND_00001_00002, printings_Function1D_00001, aux4)
product(design_FunctionND_00002_00002, printings_Function1D_00002, aux5)
product(design_FunctionND_00001_00003, printings_Function1D_00001, aux6)
product(design_FunctionND_00002_00003, printings_Function1D_00002, aux7)
product(design_FunctionND_00001_00004, printings_Function1D_00001, aux8)
product(design_FunctionND_00002_00004, printings_Function1D_00002, aux9)
product(design_FunctionND_00001_00005, printings_Function1D_00001, aux10)
product(design_FunctionND_00002_00005, printings_Function1D_00002, aux11)
product(design_FunctionND_00001_00006, printings_Function1D_00001, aux12)
product(design_FunctionND_00002_00006, printings_Function1D_00002, aux13)
product(design_FunctionND_00001_00007, printings_Function1D_00001, aux14)
product(design_FunctionND_00002_00007, printings_Function1D_00002, aux15)
sumgeq([aux2,aux3],250)
sumgeq([aux4,aux5],255)
sumgeq([aux6,aux7],260)
sumgeq([aux8,aux9],500)
sumgeq([aux10,aux11],500)
sumgeq([aux12,aux13],800)
sumgeq([aux14,aux15],1100)
sumleq([printings_Function1D_00001,printings_Function1D_00002],aux1)
sumgeq([printings_Function1D_00001,printings_Function1D_00002],aux1)
**EOF**
